// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/v5/swagguard/compiler/models"
)

// DecodeCalldataBytecodeReader is a Reader for the DecodeCalldataBytecode structure.
type DecodeCalldataBytecodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DecodeCalldataBytecodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDecodeCalldataBytecodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDecodeCalldataBytecodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDecodeCalldataBytecodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDecodeCalldataBytecodeOK creates a DecodeCalldataBytecodeOK with default headers values
func NewDecodeCalldataBytecodeOK() *DecodeCalldataBytecodeOK {
	return &DecodeCalldataBytecodeOK{}
}

/*DecodeCalldataBytecodeOK handles this case with default header values.

Binary encoded calldata
*/
type DecodeCalldataBytecodeOK struct {
	Payload *models.DecodedCalldata
}

func (o *DecodeCalldataBytecodeOK) Error() string {
	return fmt.Sprintf("[POST /decode-calldata/bytecode][%d] decodeCalldataBytecodeOK  %+v", 200, o.Payload)
}

func (o *DecodeCalldataBytecodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DecodedCalldata)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecodeCalldataBytecodeBadRequest creates a DecodeCalldataBytecodeBadRequest with default headers values
func NewDecodeCalldataBytecodeBadRequest() *DecodeCalldataBytecodeBadRequest {
	return &DecodeCalldataBytecodeBadRequest{}
}

/*DecodeCalldataBytecodeBadRequest handles this case with default header values.

Invalid data
*/
type DecodeCalldataBytecodeBadRequest struct {
	Payload *models.Error
}

func (o *DecodeCalldataBytecodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /decode-calldata/bytecode][%d] decodeCalldataBytecodeBadRequest  %+v", 400, o.Payload)
}

func (o *DecodeCalldataBytecodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecodeCalldataBytecodeForbidden creates a DecodeCalldataBytecodeForbidden with default headers values
func NewDecodeCalldataBytecodeForbidden() *DecodeCalldataBytecodeForbidden {
	return &DecodeCalldataBytecodeForbidden{}
}

/*DecodeCalldataBytecodeForbidden handles this case with default header values.

Invalid contract
*/
type DecodeCalldataBytecodeForbidden struct {
	Payload *models.Error
}

func (o *DecodeCalldataBytecodeForbidden) Error() string {
	return fmt.Sprintf("[POST /decode-calldata/bytecode][%d] decodeCalldataBytecodeForbidden  %+v", 403, o.Payload)
}

func (o *DecodeCalldataBytecodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
