// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DecodeCalldataBytecode decode calldata bytecode
// swagger:model DecodeCalldataBytecode
type DecodeCalldataBytecode struct {

	// Compiled contract
	// Required: true
	Bytecode EncodedByteArray `json:"bytecode"`

	// Calldata to dissect
	// Required: true
	Calldata EncodedByteArray `json:"calldata"`
}

// Validate validates this decode calldata bytecode
func (m *DecodeCalldataBytecode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBytecode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCalldata(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DecodeCalldataBytecode) validateBytecode(formats strfmt.Registry) error {

	if err := m.Bytecode.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("bytecode")
		}
		return err
	}

	return nil
}

func (m *DecodeCalldataBytecode) validateCalldata(formats strfmt.Registry) error {

	if err := m.Calldata.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("calldata")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DecodeCalldataBytecode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DecodeCalldataBytecode) UnmarshalBinary(b []byte) error {
	var res DecodeCalldataBytecode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
