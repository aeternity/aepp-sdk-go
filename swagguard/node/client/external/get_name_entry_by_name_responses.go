// Code generated by go-swagger; DO NOT EDIT.

package external

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/v5/swagguard/node/models"
)

// GetNameEntryByNameReader is a Reader for the GetNameEntryByName structure.
type GetNameEntryByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNameEntryByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNameEntryByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetNameEntryByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNameEntryByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNameEntryByNameOK creates a GetNameEntryByNameOK with default headers values
func NewGetNameEntryByNameOK() *GetNameEntryByNameOK {
	return &GetNameEntryByNameOK{}
}

/*GetNameEntryByNameOK handles this case with default header values.

Successful operation
*/
type GetNameEntryByNameOK struct {
	Payload *models.NameEntry
}

func (o *GetNameEntryByNameOK) Error() string {
	return fmt.Sprintf("[GET /names/{name}][%d] getNameEntryByNameOK  %+v", 200, o.Payload)
}

func (o *GetNameEntryByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NameEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNameEntryByNameBadRequest creates a GetNameEntryByNameBadRequest with default headers values
func NewGetNameEntryByNameBadRequest() *GetNameEntryByNameBadRequest {
	return &GetNameEntryByNameBadRequest{}
}

/*GetNameEntryByNameBadRequest handles this case with default header values.

Invalid name
*/
type GetNameEntryByNameBadRequest struct {
	Payload *models.Error
}

func (o *GetNameEntryByNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /names/{name}][%d] getNameEntryByNameBadRequest  %+v", 400, o.Payload)
}

func (o *GetNameEntryByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNameEntryByNameNotFound creates a GetNameEntryByNameNotFound with default headers values
func NewGetNameEntryByNameNotFound() *GetNameEntryByNameNotFound {
	return &GetNameEntryByNameNotFound{}
}

/*GetNameEntryByNameNotFound handles this case with default header values.

Name not found
*/
type GetNameEntryByNameNotFound struct {
	Payload *models.Error
}

func (o *GetNameEntryByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /names/{name}][%d] getNameEntryByNameNotFound  %+v", 404, o.Payload)
}

func (o *GetNameEntryByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
