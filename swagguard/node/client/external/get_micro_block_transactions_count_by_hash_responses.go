// Code generated by go-swagger; DO NOT EDIT.

package external

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/aeternity/aepp-sdk-go/v8/swagguard/node/models"
)

// GetMicroBlockTransactionsCountByHashReader is a Reader for the GetMicroBlockTransactionsCountByHash structure.
type GetMicroBlockTransactionsCountByHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMicroBlockTransactionsCountByHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMicroBlockTransactionsCountByHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMicroBlockTransactionsCountByHashBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMicroBlockTransactionsCountByHashNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMicroBlockTransactionsCountByHashOK creates a GetMicroBlockTransactionsCountByHashOK with default headers values
func NewGetMicroBlockTransactionsCountByHashOK() *GetMicroBlockTransactionsCountByHashOK {
	return &GetMicroBlockTransactionsCountByHashOK{}
}

/* GetMicroBlockTransactionsCountByHashOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetMicroBlockTransactionsCountByHashOK struct {
	Payload *GetMicroBlockTransactionsCountByHashOKBody
}

func (o *GetMicroBlockTransactionsCountByHashOK) Error() string {
	return fmt.Sprintf("[GET /micro-blocks/hash/{hash}/transactions/count][%d] getMicroBlockTransactionsCountByHashOK  %+v", 200, o.Payload)
}
func (o *GetMicroBlockTransactionsCountByHashOK) GetPayload() *GetMicroBlockTransactionsCountByHashOKBody {
	return o.Payload
}

func (o *GetMicroBlockTransactionsCountByHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMicroBlockTransactionsCountByHashOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicroBlockTransactionsCountByHashBadRequest creates a GetMicroBlockTransactionsCountByHashBadRequest with default headers values
func NewGetMicroBlockTransactionsCountByHashBadRequest() *GetMicroBlockTransactionsCountByHashBadRequest {
	return &GetMicroBlockTransactionsCountByHashBadRequest{}
}

/* GetMicroBlockTransactionsCountByHashBadRequest describes a response with status code 400, with default header values.

Invalid hash
*/
type GetMicroBlockTransactionsCountByHashBadRequest struct {
	Payload *models.Error
}

func (o *GetMicroBlockTransactionsCountByHashBadRequest) Error() string {
	return fmt.Sprintf("[GET /micro-blocks/hash/{hash}/transactions/count][%d] getMicroBlockTransactionsCountByHashBadRequest  %+v", 400, o.Payload)
}
func (o *GetMicroBlockTransactionsCountByHashBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicroBlockTransactionsCountByHashBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicroBlockTransactionsCountByHashNotFound creates a GetMicroBlockTransactionsCountByHashNotFound with default headers values
func NewGetMicroBlockTransactionsCountByHashNotFound() *GetMicroBlockTransactionsCountByHashNotFound {
	return &GetMicroBlockTransactionsCountByHashNotFound{}
}

/* GetMicroBlockTransactionsCountByHashNotFound describes a response with status code 404, with default header values.

Block not found
*/
type GetMicroBlockTransactionsCountByHashNotFound struct {
	Payload *models.Error
}

func (o *GetMicroBlockTransactionsCountByHashNotFound) Error() string {
	return fmt.Sprintf("[GET /micro-blocks/hash/{hash}/transactions/count][%d] getMicroBlockTransactionsCountByHashNotFound  %+v", 404, o.Payload)
}
func (o *GetMicroBlockTransactionsCountByHashNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicroBlockTransactionsCountByHashNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMicroBlockTransactionsCountByHashOKBody get micro block transactions count by hash o k body
swagger:model GetMicroBlockTransactionsCountByHashOKBody
*/
type GetMicroBlockTransactionsCountByHashOKBody struct {

	// Count
	Count uint32 `json:"count,omitempty"`
}

// Validate validates this get micro block transactions count by hash o k body
func (o *GetMicroBlockTransactionsCountByHashOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get micro block transactions count by hash o k body based on context it is used
func (o *GetMicroBlockTransactionsCountByHashOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMicroBlockTransactionsCountByHashOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMicroBlockTransactionsCountByHashOKBody) UnmarshalBinary(b []byte) error {
	var res GetMicroBlockTransactionsCountByHashOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
