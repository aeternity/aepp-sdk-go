// Code generated by go-swagger; DO NOT EDIT.

package external

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/v5/swagguard/node/models"
)

// GetContractCodeReader is a Reader for the GetContractCode structure.
type GetContractCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContractCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetContractCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetContractCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetContractCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContractCodeOK creates a GetContractCodeOK with default headers values
func NewGetContractCodeOK() *GetContractCodeOK {
	return &GetContractCodeOK{}
}

/*GetContractCodeOK handles this case with default header values.

Contract code
*/
type GetContractCodeOK struct {
	Payload *models.ByteCode
}

func (o *GetContractCodeOK) Error() string {
	return fmt.Sprintf("[GET /contracts/{pubkey}/code][%d] getContractCodeOK  %+v", 200, o.Payload)
}

func (o *GetContractCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ByteCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractCodeBadRequest creates a GetContractCodeBadRequest with default headers values
func NewGetContractCodeBadRequest() *GetContractCodeBadRequest {
	return &GetContractCodeBadRequest{}
}

/*GetContractCodeBadRequest handles this case with default header values.

Invalid pubkey
*/
type GetContractCodeBadRequest struct {
	Payload *models.Error
}

func (o *GetContractCodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /contracts/{pubkey}/code][%d] getContractCodeBadRequest  %+v", 400, o.Payload)
}

func (o *GetContractCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractCodeNotFound creates a GetContractCodeNotFound with default headers values
func NewGetContractCodeNotFound() *GetContractCodeNotFound {
	return &GetContractCodeNotFound{}
}

/*GetContractCodeNotFound handles this case with default header values.

Contract not found
*/
type GetContractCodeNotFound struct {
	Payload *models.Error
}

func (o *GetContractCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /contracts/{pubkey}/code][%d] getContractCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetContractCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
