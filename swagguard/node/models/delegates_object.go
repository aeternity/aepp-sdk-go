// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DelegatesObject delegates object
//
// swagger:model DelegatesObject
type DelegatesObject struct {

	// Initiator's delegates
	Initiator DelegatesList `json:"initiator,omitempty"`

	// Responder's delegates
	Responder DelegatesList `json:"responder,omitempty"`
}

// Validate validates this delegates object
func (m *DelegatesObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInitiator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResponder(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DelegatesObject) validateInitiator(formats strfmt.Registry) error {
	if swag.IsZero(m.Initiator) { // not required
		return nil
	}

	if err := m.Initiator.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("initiator")
		}
		return err
	}

	return nil
}

func (m *DelegatesObject) validateResponder(formats strfmt.Registry) error {
	if swag.IsZero(m.Responder) { // not required
		return nil
	}

	if err := m.Responder.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("responder")
		}
		return err
	}

	return nil
}

// ContextValidate validate this delegates object based on the context it is used
func (m *DelegatesObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateInitiator(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateResponder(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DelegatesObject) contextValidateInitiator(ctx context.Context, formats strfmt.Registry) error {

	if err := m.Initiator.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("initiator")
		}
		return err
	}

	return nil
}

func (m *DelegatesObject) contextValidateResponder(ctx context.Context, formats strfmt.Registry) error {

	if err := m.Responder.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("responder")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DelegatesObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DelegatesObject) UnmarshalBinary(b []byte) error {
	var res DelegatesObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
