// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Protocol protocol
// swagger:model Protocol
type Protocol struct {

	// effective at height
	// Required: true
	EffectiveAtHeight Uint64 `json:"effective_at_height"`

	// version
	// Required: true
	Version Uint32 `json:"version"`
}

// Validate validates this protocol
func (m *Protocol) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEffectiveAtHeight(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Protocol) validateEffectiveAtHeight(formats strfmt.Registry) error {

	if err := m.EffectiveAtHeight.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("effective_at_height")
		}
		return err
	}

	return nil
}

func (m *Protocol) validateVersion(formats strfmt.Registry) error {

	if err := m.Version.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("version")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Protocol) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Protocol) UnmarshalBinary(b []byte) error {
	var res Protocol
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
