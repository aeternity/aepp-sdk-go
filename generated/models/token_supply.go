// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// TokenSupply token supply
// swagger:model TokenSupply
type TokenSupply struct {

	// Tokens in account balances
	Accounts int64 `json:"accounts,omitempty"`

	// Tokens in contracts registered as oracles
	ContractOracles int64 `json:"contract_oracles,omitempty"`

	// Tokens in contracts
	Contracts int64 `json:"contracts,omitempty"`

	// Tokens locked (not owned by anyone)
	Locked int64 `json:"locked,omitempty"`

	// Tokens in pending oracle queries
	OracleQueries int64 `json:"oracle_queries,omitempty"`

	// Tokens in accounts registered as oracles
	Oracles int64 `json:"oracles,omitempty"`

	// Tokens from fees and coinbase pending in the beneficiary reward delay
	PendingRewards int64 `json:"pending_rewards,omitempty"`

	// Sum of all tokens from other fields
	Total int64 `json:"total,omitempty"`
}

// Validate validates this token supply
func (m *TokenSupply) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TokenSupply) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TokenSupply) UnmarshalBinary(b []byte) error {
	var res TokenSupply
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
