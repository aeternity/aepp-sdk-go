// Code generated by go-swagger; DO NOT EDIT.

package external

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetPeerPubkeyReader is a Reader for the GetPeerPubkey structure.
type GetPeerPubkeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPeerPubkeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPeerPubkeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPeerPubkeyOK creates a GetPeerPubkeyOK with default headers values
func NewGetPeerPubkeyOK() *GetPeerPubkeyOK {
	return &GetPeerPubkeyOK{}
}

/*GetPeerPubkeyOK handles this case with default header values.

Successful operation
*/
type GetPeerPubkeyOK struct {
	Payload *GetPeerPubkeyOKBody
}

func (o *GetPeerPubkeyOK) Error() string {
	return fmt.Sprintf("[GET /peers/pubkey][%d] getPeerPubkeyOK  %+v", 200, o.Payload)
}

func (o *GetPeerPubkeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPeerPubkeyOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPeerPubkeyOKBody get peer pubkey o k body
swagger:model GetPeerPubkeyOKBody
*/
type GetPeerPubkeyOKBody struct {

	// pubkey
	Pubkey string `json:"pubkey,omitempty"`
}

// Validate validates this get peer pubkey o k body
func (o *GetPeerPubkeyOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPeerPubkeyOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPeerPubkeyOKBody) UnmarshalBinary(b []byte) error {
	var res GetPeerPubkeyOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
