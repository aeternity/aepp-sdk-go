// Code generated by go-swagger; DO NOT EDIT.

package external

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetMicroBlockTransactionByHashAndIndexParams creates a new GetMicroBlockTransactionByHashAndIndexParams object
// with the default values initialized.
func NewGetMicroBlockTransactionByHashAndIndexParams() *GetMicroBlockTransactionByHashAndIndexParams {
	var ()
	return &GetMicroBlockTransactionByHashAndIndexParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetMicroBlockTransactionByHashAndIndexParamsWithTimeout creates a new GetMicroBlockTransactionByHashAndIndexParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetMicroBlockTransactionByHashAndIndexParamsWithTimeout(timeout time.Duration) *GetMicroBlockTransactionByHashAndIndexParams {
	var ()
	return &GetMicroBlockTransactionByHashAndIndexParams{

		timeout: timeout,
	}
}

// NewGetMicroBlockTransactionByHashAndIndexParamsWithContext creates a new GetMicroBlockTransactionByHashAndIndexParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetMicroBlockTransactionByHashAndIndexParamsWithContext(ctx context.Context) *GetMicroBlockTransactionByHashAndIndexParams {
	var ()
	return &GetMicroBlockTransactionByHashAndIndexParams{

		Context: ctx,
	}
}

// NewGetMicroBlockTransactionByHashAndIndexParamsWithHTTPClient creates a new GetMicroBlockTransactionByHashAndIndexParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetMicroBlockTransactionByHashAndIndexParamsWithHTTPClient(client *http.Client) *GetMicroBlockTransactionByHashAndIndexParams {
	var ()
	return &GetMicroBlockTransactionByHashAndIndexParams{
		HTTPClient: client,
	}
}

/*GetMicroBlockTransactionByHashAndIndexParams contains all the parameters to send to the API endpoint
for the get micro block transaction by hash and index operation typically these are written to a http.Request
*/
type GetMicroBlockTransactionByHashAndIndexParams struct {

	/*Hash
	  The hash of the block

	*/
	Hash string
	/*Index
	  The index of the transaction in a block

	*/
	Index int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) WithTimeout(timeout time.Duration) *GetMicroBlockTransactionByHashAndIndexParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) WithContext(ctx context.Context) *GetMicroBlockTransactionByHashAndIndexParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) WithHTTPClient(client *http.Client) *GetMicroBlockTransactionByHashAndIndexParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHash adds the hash to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) WithHash(hash string) *GetMicroBlockTransactionByHashAndIndexParams {
	o.SetHash(hash)
	return o
}

// SetHash adds the hash to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) SetHash(hash string) {
	o.Hash = hash
}

// WithIndex adds the index to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) WithIndex(index int64) *GetMicroBlockTransactionByHashAndIndexParams {
	o.SetIndex(index)
	return o
}

// SetIndex adds the index to the get micro block transaction by hash and index params
func (o *GetMicroBlockTransactionByHashAndIndexParams) SetIndex(index int64) {
	o.Index = index
}

// WriteToRequest writes these params to a swagger request
func (o *GetMicroBlockTransactionByHashAndIndexParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param hash
	if err := r.SetPathParam("hash", o.Hash); err != nil {
		return err
	}

	// path param index
	if err := r.SetPathParam("index", swag.FormatInt64(o.Index)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
