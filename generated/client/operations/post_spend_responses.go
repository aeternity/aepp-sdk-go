// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// PostSpendReader is a Reader for the PostSpend structure.
type PostSpendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostSpendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostSpendBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostSpendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSpendOK creates a PostSpendOK with default headers values
func NewPostSpendOK() *PostSpendOK {
	return &PostSpendOK{}
}

/*PostSpendOK handles this case with default header values.

Successful operation
*/
type PostSpendOK struct {
	Payload *models.UnsignedTx
}

func (o *PostSpendOK) Error() string {
	return fmt.Sprintf("[POST /debug/transactions/spend][%d] postSpendOK  %+v", 200, o.Payload)
}

func (o *PostSpendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnsignedTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpendBadRequest creates a PostSpendBadRequest with default headers values
func NewPostSpendBadRequest() *PostSpendBadRequest {
	return &PostSpendBadRequest{}
}

/*PostSpendBadRequest handles this case with default header values.

Invalid transaction
*/
type PostSpendBadRequest struct {
	Payload *models.Error
}

func (o *PostSpendBadRequest) Error() string {
	return fmt.Sprintf("[POST /debug/transactions/spend][%d] postSpendBadRequest  %+v", 400, o.Payload)
}

func (o *PostSpendBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpendNotFound creates a PostSpendNotFound with default headers values
func NewPostSpendNotFound() *PostSpendNotFound {
	return &PostSpendNotFound{}
}

/*PostSpendNotFound handles this case with default header values.

Sender account not found
*/
type PostSpendNotFound struct {
	Payload *models.Error
}

func (o *PostSpendNotFound) Error() string {
	return fmt.Sprintf("[POST /debug/transactions/spend][%d] postSpendNotFound  %+v", 404, o.Payload)
}

func (o *PostSpendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
