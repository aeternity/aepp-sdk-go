// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// PostOracleQueryReader is a Reader for the PostOracleQuery structure.
type PostOracleQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOracleQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostOracleQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostOracleQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostOracleQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostOracleQueryOK creates a PostOracleQueryOK with default headers values
func NewPostOracleQueryOK() *PostOracleQueryOK {
	return &PostOracleQueryOK{}
}

/*PostOracleQueryOK handles this case with default header values.

Successful operation
*/
type PostOracleQueryOK struct {
	Payload *models.UnsignedTx
}

func (o *PostOracleQueryOK) Error() string {
	return fmt.Sprintf("[POST /debug/oracles/query][%d] postOracleQueryOK  %+v", 200, o.Payload)
}

func (o *PostOracleQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnsignedTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOracleQueryBadRequest creates a PostOracleQueryBadRequest with default headers values
func NewPostOracleQueryBadRequest() *PostOracleQueryBadRequest {
	return &PostOracleQueryBadRequest{}
}

/*PostOracleQueryBadRequest handles this case with default header values.

Invalid transaction
*/
type PostOracleQueryBadRequest struct {
	Payload *models.Error
}

func (o *PostOracleQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /debug/oracles/query][%d] postOracleQueryBadRequest  %+v", 400, o.Payload)
}

func (o *PostOracleQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOracleQueryNotFound creates a PostOracleQueryNotFound with default headers values
func NewPostOracleQueryNotFound() *PostOracleQueryNotFound {
	return &PostOracleQueryNotFound{}
}

/*PostOracleQueryNotFound handles this case with default header values.

Account or oracle not found
*/
type PostOracleQueryNotFound struct {
	Payload *models.Error
}

func (o *PostOracleQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /debug/oracles/query][%d] postOracleQueryNotFound  %+v", 404, o.Payload)
}

func (o *PostOracleQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
