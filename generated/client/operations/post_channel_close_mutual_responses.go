// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// PostChannelCloseMutualReader is a Reader for the PostChannelCloseMutual structure.
type PostChannelCloseMutualReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostChannelCloseMutualReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostChannelCloseMutualOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostChannelCloseMutualBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostChannelCloseMutualOK creates a PostChannelCloseMutualOK with default headers values
func NewPostChannelCloseMutualOK() *PostChannelCloseMutualOK {
	return &PostChannelCloseMutualOK{}
}

/*PostChannelCloseMutualOK handles this case with default header values.

Successful operation
*/
type PostChannelCloseMutualOK struct {
	Payload *models.UnsignedTx
}

func (o *PostChannelCloseMutualOK) Error() string {
	return fmt.Sprintf("[POST /debug/channels/close/mutual][%d] postChannelCloseMutualOK  %+v", 200, o.Payload)
}

func (o *PostChannelCloseMutualOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnsignedTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostChannelCloseMutualBadRequest creates a PostChannelCloseMutualBadRequest with default headers values
func NewPostChannelCloseMutualBadRequest() *PostChannelCloseMutualBadRequest {
	return &PostChannelCloseMutualBadRequest{}
}

/*PostChannelCloseMutualBadRequest handles this case with default header values.

Invalid transaction
*/
type PostChannelCloseMutualBadRequest struct {
	Payload *models.Error
}

func (o *PostChannelCloseMutualBadRequest) Error() string {
	return fmt.Sprintf("[POST /debug/channels/close/mutual][%d] postChannelCloseMutualBadRequest  %+v", 400, o.Payload)
}

func (o *PostChannelCloseMutualBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
