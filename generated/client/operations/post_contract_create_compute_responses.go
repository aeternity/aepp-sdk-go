// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// PostContractCreateComputeReader is a Reader for the PostContractCreateCompute structure.
type PostContractCreateComputeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContractCreateComputeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostContractCreateComputeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostContractCreateComputeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostContractCreateComputeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostContractCreateComputeOK creates a PostContractCreateComputeOK with default headers values
func NewPostContractCreateComputeOK() *PostContractCreateComputeOK {
	return &PostContractCreateComputeOK{}
}

/*PostContractCreateComputeOK handles this case with default header values.

Successful operation
*/
type PostContractCreateComputeOK struct {
	Payload *models.CreateContractUnsignedTx
}

func (o *PostContractCreateComputeOK) Error() string {
	return fmt.Sprintf("[POST /debug/contracts/create/compute][%d] postContractCreateComputeOK  %+v", 200, o.Payload)
}

func (o *PostContractCreateComputeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateContractUnsignedTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContractCreateComputeBadRequest creates a PostContractCreateComputeBadRequest with default headers values
func NewPostContractCreateComputeBadRequest() *PostContractCreateComputeBadRequest {
	return &PostContractCreateComputeBadRequest{}
}

/*PostContractCreateComputeBadRequest handles this case with default header values.

Invalid transaction
*/
type PostContractCreateComputeBadRequest struct {
	Payload *models.Error
}

func (o *PostContractCreateComputeBadRequest) Error() string {
	return fmt.Sprintf("[POST /debug/contracts/create/compute][%d] postContractCreateComputeBadRequest  %+v", 400, o.Payload)
}

func (o *PostContractCreateComputeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContractCreateComputeNotFound creates a PostContractCreateComputeNotFound with default headers values
func NewPostContractCreateComputeNotFound() *PostContractCreateComputeNotFound {
	return &PostContractCreateComputeNotFound{}
}

/*PostContractCreateComputeNotFound handles this case with default header values.

Owner account not found
*/
type PostContractCreateComputeNotFound struct {
	Payload *models.Error
}

func (o *PostContractCreateComputeNotFound) Error() string {
	return fmt.Sprintf("[POST /debug/contracts/create/compute][%d] postContractCreateComputeNotFound  %+v", 404, o.Payload)
}

func (o *PostContractCreateComputeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
